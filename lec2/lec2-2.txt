HW2
木構造がよく大規模DBに使われる

・データの追加や削除によって動的にサイズを変更できる構造であるから
・データの順序を保持して範囲検索ができ効率的だから（ハッシュは無秩序に格納されていて全スキャン必要）
・ハッシュではハッシュ関数の性能に左右されてしまう問題点があるが、木構造では衝突の問題が存在しないから安定する
・N個の要素を格納するために木構造だと配列の要素数がN個必要。ハッシュテーブルだとN個以上必要。